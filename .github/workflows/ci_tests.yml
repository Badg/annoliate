# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the trunk branch
on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Installs python
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Set up flake8
      - name: Set up flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      # Run linting
      - name: Lint
        # This just stops for syntax errors and undefined names
        run: python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Pytest ${{ matrix.os }} @ python ${{ matrix.python-version }}
    needs: [linting]

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Installs python
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
          
      - name: Set up poetry  
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version 1.1.2
        shell: bash

      - name: Add poetry to path (unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Add poetry to path (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "$env:USERPROFILE\.poetry\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install package as editable with dev deps
        run: poetry install
    
      - name: Run tests
        run: poetry run pytest
